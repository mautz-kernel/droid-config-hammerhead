# -------- Group section -------------------------------------------------------

[group]
name   = idle
flags  = nopolicy
sink   = sink.null
source = sink.null.monitor

[group]
name   = background
flags  = limit_volume, cork_stream
sink   = sink.primary
source = source.primary

[group]
name   = systemsound
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = sink.primary
source = sink.null.monitor

[group]
name   = btnotify
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = sink.primaryandbluez
source = sink.null.monitor

[group]
name   = feedbacksound
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = sink.primary
source = sink.null.monitor

[group]
name   = inputsound
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = sink.primary
source = sink.null.monitor

[group]
name   = event
flags  = set_sink, limit_volume, cork_stream, mute_by_route
sink   = sink.primary
source = sink.null.monitor

[group]
name   = alarm
flags  = set_sink, limit_volume, cork_stream
sink   = sink.primary
source = sink.null.monitor

[group]
name   = flash
flags  = limit_volume, cork_stream
sink   = sink.primary
source = source.primary

[group]
name   = player
flags  = route_audio, limit_volume, cork_stream
sink   = sink.primary
source = source.primary

[group]
name   = game
flags  = route_audio, limit_volume, cork_stream
sink   = sink.primary
source = source.primary

[group]
name   = voiceui
flags  = set_sink, limit_volume, cork_stream
sink   = sink.primary
source = sink.null.monitor

[group]
name   = ringtone
flags  = limit_volume, mute_by_route, cork_stream, media_notify
sink   = sink.primary
source = source.null.monitor

[group]
name   = camera
flags  = set_sink, set_source, limit_volume, cork_stream
sink   = sink.primary
source = source.primary

[group]
name   = videoeditor
flags  = route_audio, limit_volume, cork_stream
sink   = sink.primary
source = source.primary

[group]
name   = ipcall
flags  = set_sink, set_source, limit_volume, cork_stream
sink   = sink.primary
source = source.primary

[group]
name   = call
flags  = set_sink, set_source
sink   = sink.primary
source = source.primary

[group]
name   = navigator
flags  = set_sink, set_source
sink   = sink.primary
source = sink.null.monitor

[group]
name   = cstone
flags  = route_audio, set_source, limit_volume
sink   = sink.primary
source = sink.null.monitor

[group]
name   = alwayson
flags  = set_sink, limit_volume, cork_stream
sink   = sink.primary
source = sink.null.monitor

[group]
name   = nonsilent
flags  = set_sink, limit_volume, cork_stream
sink   = sink.primary
source = sink.null.monitor

[group]
name   = internal
flags  = nopolicy
sink   = sink.null
source = source.null.monitor

[group]
name   = outgoing
flags  = route_audio
sink   = sink.primary
source = sink.null.monitor

[group]
name   = incoming
flags  = route_audio
sink   = sink.null
source = source.primary

[group]
name   = alien
flags  = route_audio, limit_volume, cork_stream
sink   = sink.primary
source = source.primary

[group]
name   = aliencall
flags  = route_audio, limit_volume, cork_stream
sink   = sink.primary
source = source.primary


# -------- Card section --------------------------------------------------------

# -------- Device section ------------------------------------------------------

[device]
type = tvoutandbta2dp
sink = name@startswith:"bluez_sink"

[device]
type  = ihfandheadset
sink  = equals:sink.primary
ports = sink.primary:output-speaker+wired_headphone

[device]
type  = ihfandheadset
source= equals:source.primary
ports = source.primary:input-wired_headset

[device]
type  = ihfandheadphone
sink  = equals:sink.primary
ports = sink.primary:output-speaker+wired_headphone

[device]
type  = bta2dp
sink  = name@startswith:"bluez_sink"
ports = sink.primary:output-speaker
flags = disable_notify

[device]
type  = bta2dpforalien
sink  = name@startswith:"bluez_sink"
ports = sink.primary:output-speaker
flags = disable_notify

[device]
type  = bthsp
sink  = equals:sink.primary
ports = sink.primary:output-bluetooth_sco
flags = disable_notify, refresh_always

[device]
type   = bthsp
source = equals:source.primary
ports  = source.primary:input-bluetooth_sco_headset
flags  = disable_notify, refresh_always

[device]
type  = bthspforcall
sink  = equals:sink.primary
ports = sink.primary:output-bluetooth_sco
flags = disable_notify, refresh_always, delayed_port_change

[device]
type   = bthspforcall
source = equals:source.primary
ports  = source.primary:input-bluetooth_sco_headset
flags  = disable_notify, refresh_always

[device]
type  = bthspforalien
sink  = equals:sink.primary
ports = sink.primary:output-bluetooth_sco
flags = disable_notify, refresh_always, delayed_port_change

[device]
type   = bthspforalien
source = equals:source.primary
ports  = source.primary:input-bluetooth_sco_headset
flags  = disable_notify, refresh_always

[device]
type  = bthfp
sink  = equals:sink.primary
ports = sink.primary:output-bluetooth_sco
flags = disable_notify, refresh_always

[device]
type   = bthfp
source = equals:source.primary
ports  = source.primary:input-bluetooth_sco_headset
flags  = disable_notify, refresh_always

[device]
type  = bthfpforcall
sink  = equals:sink.primary
ports = sink.primary:output-bluetooth_sco
flags = disable_notify, refresh_always, delayed_port_change

[device]
type   = bthfpforcall
source = equals:source.primary
ports  = source.primary:input-bluetooth_sco_headset
flags  = disable_notify, refresh_always

[device]
type  = bthfpforalien
sink  = equals:sink.primary
ports = sink.primary:output-bluetooth_sco
flags = disable_notify, refresh_always, delayed_port_change

[device]
type   = bthfpforalien
source = equals:source.primary
ports  = source.primary:input-bluetooth_sco_headset
flags  = disable_notify, refresh_always

[device]
type = headset
source = equals:source.primary
ports = source.primary:input-wired_headset
flags = disable_notify, refresh_always

[device]
type  = headset
sink  = equals:sink.primary
ports = sink.primary:output-wired_headset
flags = disable_notify, refresh_always

[device]
type  = headsetforcall
sink  = equals:sink.primary
ports = sink.primary:output-wired_headset
flags = refresh_always

[device]
type = headsetforcall
source = equals:source.primary
ports = source.primary:input-wired_headset

[device]
type  = headsetforalien
sink  = equals:sink.primary
ports = sink.primary:output-wired_headset
flags = refresh_always

[device]
type = headsetforalien
source = equals:source.primary
ports = source.primary:input-wired_headset

[device]
type  = headphone
sink  = equals:sink.primary
ports = sink.primary:output-wired_headphone
flags = disable_notify, refresh_always

[device]
type  = headphoneforcall
sink  = equals:sink.primary
ports = sink.primary:output-wired_headphone
flags = refresh_always

[device]
type  = headphoneforalien
sink  = equals:sink.primary
ports = sink.primary:output-wired_headphone
flags = refresh_always

[device]
type  = ihfandtvout
sink  = equals:sink.primary
ports = sink.primary:output-wired_headset

[device]
type  = tvout
sink  = equals:sink.primary
ports = sink.primary:output-wired_headset

[device]
type  = earpieceandtvout
sink  = equals:sink.primary
ports = sink.primary:output-earpiece

[device]
type  = earpieceforcall
sink  = equals:sink.primary
ports = sink.primary:output-earpiece

[device]
type  = earpiece
sink  = equals:sink.primary
ports = sink.primary:output-earpiece

[device]
type  = earpieceforalien
sink  = equals:sink.primary
ports = sink.primary:output-earpiece
flags = refresh_always

[device]
type   = microphone
source = equals:source.primary
ports = source.primary:input-builtin_mic

[device]
type   = backmicrophone
source = equals:source.primary
ports = source.primary:input-back_mic

[device]
type  = ihf
sink  = equals:sink.primary
ports = sink.primary:output-speaker
flags = refresh_always

[device]
type  = ihfforcall
sink  = equals:sink.primary
ports = sink.primary:output-speaker
flags = refresh_always

[device]
type  = ihfforalien
sink  = equals:sink.primary
ports = sink.primary:output-speaker
flags = refresh_always

[device]
type  = voicecall
source= equals:source.primary
ports = source.primary:input-voice_call

[device]
type = null
sink = equals:sink.null

# -------- Stream section ------------------------------------------------------

[stream]
exe      = gst-launch-0.10
group    = player

[stream]
exe      = gst-launch-1.0
group    = player

[stream]
exe      = pacat
group    = player

# Ignore pulsesink probe from gstreamer pulsesink
[stream]
property = media.name@equals:"pulsesink probe"
group    = internal

[stream]
exe      = ngfd
property = media.name@equals:"system-event"
sink     = bta2dp
group    = btnotify

[stream]
exe      = ngfd
property = event.id@equals:"alarm-clock-elapsed"
sink     = bta2dp
group    = btnotify

[stream]
exe      = ngfd
property = event.id@equals:"message-new-email"
sink     = bta2dp
group    = btnotify

[stream]
exe      = ngfd
property = media.name@equals:"battery-event"
sink     = bta2dp
group    = btnotify

[stream]
property = application.process.arg0@equals:"/usr/bin/maliit-server"
group    = feedbacksound

[stream]
property = event.id@equals:"phone-incoming-call"
group    = ringtone

[stream]
property = event.id@equals:"alarm-clock-elapsed"
group    = alarm

[stream]
property = event.id@equals:"message-new-email"
group    = event

[stream]
exe      = ngfd
property = event.id@equals:"event-in-call"
group    = alwayson

[stream]
exe      = ngfd
property = media.name@equals:"event-in-call"
group    = alwayson

[stream]
exe      = ngfd
property = media.name@equals:"camera-event"
group    = camera

[stream]
exe      = ngfd
property = media.name@equals:"feedback-event"
group    = feedbacksound

[stream]
exe      = ngfd
property = media.name@equals:"system-event"
group    = systemsound

[stream]
exe      = ngfd
property = media.name@equals:"battery-event"
group    = systemsound

[stream]
exe   = telepathy-stream-engine
group = call

[stream]
property = application.process.arg0@equals:"/usr/lib/telepathy/telepathy-stream-engine"
group    = call

[stream]
property = media.name@equals:"indtone"
group    = cstone

[stream]
property = media.name@equals:"dtmf"
group    = cstone

[stream]
property = media.name@equals:"notiftone"
group    = nonsilent

[stream]
exe   = qmafw-dbus-wrapper
group = player

[stream]
name     = "Virtual Stream for MainVolume Volume Control"
group    = internal

[stream]
name  = "output of sink.primary"
group = internal

[stream]
name  = "input of source.primary"
group = internal

[stream]
property = media.role@equals:"abstract"
group    = internal

# For routing to sink.primaryandbluez
[stream]
property = media.name@startswith:"Simultaneous output on"
group    = internal

# -------- Context rule section ------------------------------------------------

[context-rule]
variable     = call
value        = equals:outgoing
set-property = sink-name@equals:"sink.primary", property:"x-nemo.voicecall.status", value@constant:"active"

[context-rule]
variable     = call
value        = equals:active
set-property = sink-name@equals:"sink.primary", property:"x-nemo.voicecall.status", value@constant:"active"

[context-rule]
variable     = call
value        = equals:inactive
set-property = sink-name@equals:"sink.primary", property:"x-nemo.voicecall.status", value@constant:"inactive"

[context-rule]
variable     = media_state
value        = matches:"^[^t].*"
set-property = sink-name@equals:"sink.primary", property:"x-nemo.media.state", value@copy-from-context
